name: Lambda Terraform OIDC Deployment and Docker Push to ECR

on:
  push:
    branches:
      - main
    paths:
      - 'use-case-7/**'
      - '.github/workflows/**'

permissions:
  id-token: write
  contents: write

jobs:
  deploy:
    name: Terraform CI/CD with OIDC
    runs-on: ubuntu-latest

    environment: production

    defaults:
      run:
        working-directory: use-case-7

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install terraform-docs
        run: |
          curl -sSL -o terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/v0.17.0/terraform-docs-v0.17.0-linux-amd64.tar.gz
          tar -xzf terraform-docs.tar.gz
          chmod +x terraform-docs
          sudo mv terraform-docs /usr/local/bin/

      - name: Generate Combined Terraform Docs for All Modules
        run: |
          echo "# Terraform Modules Documentation" > README.md
          for dir in modules/*/; do
            echo -e "\n## Module: ${dir#*/}" >> README.md
            terraform-docs markdown "$dir" >> README.md
          done

      - name: Commit Combined README
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add README.md
          git commit -m "docs: update combined Terraform README" || echo "No changes to commit"
          git push

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::427521931204:role/karthick_OIDC
          role-session-name: github-actions-session
          aws-region: ap-southeast-2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Set up TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Initialize TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact
        continue-on-error: true

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Install Conftest
        run: |
          wget https://github.com/open-policy-agent/conftest/releases/download/v0.45.0/conftest_0.45.0_Linux_x86_64.tar.gz
          tar -xzf conftest_0.45.0_Linux_x86_64.tar.gz
          sudo mv conftest /usr/local/bin

      - name: Run OPA Conftest
        run: conftest test .  

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

  docker-and-lambda:
    name: Build Docker & Deploy Lambda
    runs-on: ubuntu-latest
    needs: deploy

    defaults:
      run:
        working-directory: use-case-7

    steps:

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::427521931204:role/karthick_OIDC
          role-session-name: github-actions-session
          aws-region: ap-southeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image (Tagged with SHA)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_NAME: hello-lambda
        run: |
          docker build -t $ECR_REGISTRY/$IMAGE_NAME:${{ github.sha }} -f hello-lambda/Dockerfile hello-lambda/
          docker push $ECR_REGISTRY/$IMAGE_NAME:${{ github.sha }}

      - name: Deploy Image to Lambda
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_NAME: hello-lambda
        run: |
          aws lambda update-function-code \
            --function-name hello-lambda-function \
            --image-uri $ECR_REGISTRY/$IMAGE_NAME:${{ github.sha }} \
            --region ap-southeast-2
